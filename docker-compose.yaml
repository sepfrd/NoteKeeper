services:
  postgres:
    image: postgres
    environment:
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --host=postgres --username=postgres"]
      interval: 60s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1G"
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 60s
      timeout: 5s
      retries: 5

  note-keeper:
    image: note-keeper:latest
    build:
      context: .
      dockerfile: ./NoteKeeper.Presentation/Dockerfile
    environment:
      # General Configuration
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      BaseApiUrl: "https://sepfrd.com/note-keeper/"

      # Logging Configuration
      Logging__LogLevel__Default: "Warning"
      Logging__LogLevel__MicrosoftAspNetCore: "Warning"

      # Connection Strings
      DatabaseConnectionString: "Host=postgres;Port=5432;Database=NoteKeeper;User Id=postgres;Password=${POSTGRES_PASSWORD};Trust Server Certificate=True"

      # Redis Configuration
      RedisOptions__Endpoint: "redis"
      RedisOptions__Port: 6379
      RedisOptions__User: "${REDIS_USERNAME}"
      RedisOptions__Password: "${REDIS_PASSWORD}"
      RedisOptions__Database: 0
      RedisOptions__ConnectTimeout: 5000
      RedisOptions__UseSsl: "false"
      RedisOptions__ClientName: "NoteKeeper"
      RedisOptions__RetryAttempts: 5
      RedisOptions__KeepAlive: 180

      # Ed25519 JWT Configuration
      JwtOptions__PrivateKey: "${PRIVATE_KEY}"
      JwtOptions__PublicKey: "${PUBLIC_KEY}"
      JwtOptions__Issuer: "https://sepfrd.com"
      JwtOptions__Audience: "https://sepfrd.com"
      JwtOptions__TokenLifetimeInSeconds: 86400

      # CORS Configuration
      CorsOptions__AllowedUrls__1: "http://localhost:5000"
      CorsOptions__AllowedUrls__2: "https://sepfrd.com"
      CorsOptions__AllowedUrls__3: "http://localhost:3000"
      
      # Google OAuth2 Configuration
      GoogleOAuthOptions__RedirectUri: "${GOOGLE_REDIRECT_URI}"
      GoogleOAuthOptions__ClientId: "${GOOGLE_CLIENT_ID}"
      GoogleOAuthOptions__ClientSecret: "${GOOGLE_CLIENT_SECRET}"
      GoogleOAuthOptions__ProjectId: "${GOOGLE_PROJECT_ID}"
      GoogleOAuthOptions__AuthUri: "${GOOGLE_AUTH_URI}"
      GoogleOAuthOptions__TokenUri: "${GOOGLE_TOKEN_URI}"
      GoogleOAuthOptions__RevokeUri: "${GOOGLE_REVOKE_URI}"
      GoogleOAuthOptions__AuthProviderX509CertUrl: "${GOOGLE_AUTH_PROVIDER_X509_CERT_URL}"

      # Notion OAuth2 Configuration
      NotionOAuthOptions__RedirectUri: "${NOTION_REDIRECT_URI}"
      NotionOAuthOptions__ClientId: "${NOTION_CLIENT_ID}"
      NotionOAuthOptions__ClientSecret: "${NOTION_CLIENT_SECRET}"
      NotionOAuthOptions__AuthUri: "${NOTION_AUTH_URI}"
      NotionOAuthOptions__TokenUri: "${NOTION_TOKEN_URI}"
    ports:
      - "${APPLICATION_HTTP_PORT}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure

volumes:
  postgres_data:
    driver: local
